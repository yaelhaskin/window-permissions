stages:
  - build
  - push

variables:
  # configure pipeline variables
  REPO: "windows-permissions"


.build_image:

  # Template for image build step
  image:
    # Specify Image to use for job
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]

  script:
    - build_tag=$CI_COMMIT_REF_NAME-$(date +"%F_%H_%M")-$CI_COMMIT_SHORT_SHA # // Create the build tag
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile Dockerfile --no-push --destination "sharedservicesbsmchprodacr.azurecr.io/teamea/${REPO}:$build_tag" --tarPath image.tar # // Build the image into a tar file

  artifacts:
    # Create an artifact to pass to the push job
    paths:
      - image.tar
    when: on_success # // Only create on success

.push_image:

  # Template for image push step
  image:
    # Specify Image to use for job
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
    - build_tag=$CI_COMMIT_REF_NAME-$(date +"%F_%H_%M")-$CI_COMMIT_SHORT_SHA # // Create the build tag
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY # // Login into image repository
    - echo ${REPO}:$build_tag
    - echo $CI_REGISTRY_USER
    - crane push image.tar sharedservicesbsmchprodacr.azurecr.io/teamea/${REPO}:$build_tag # // push the tar to the repo with the build tag
    - crane tag sharedservicesbsmchprodacr.azurecr.io/teamea/${REPO}:$build_tag ${TAG}latest # // Retag the image with the "latest" tag

build:
  stage: build
  extends: .build_image
  # Use .build_image template

push:
  stage: push
  extends: .push_image
  # Use .push_image template
  needs: 
    - build
